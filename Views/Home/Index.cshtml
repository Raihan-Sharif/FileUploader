@{
    ViewData["Title"] = "Home Page";
}
@*<link rel="stylesheet" href="~/css/uploader.css">


<div id="drop-zone" class="drop-zone">
    Drop files here to upload
</div>

<div id="progress-bar" class="progress-bar" style="display: none;">
    <div class="progress-bar-fill"></div>
</div>

<form id="upload-form" >
    <input type="file" name="file" multiple>
    <button type="submit">Upload</button>
</form>*@


@*
<div id="wrapper">
    <div id="uploader">
        <div class="title">
            <h2>UPLOAD FORM</h2><h2><span class="close"><i class="icon-off"></i></span></h2>
        </div>
        <div class="body">
            <div class="dropzone"><i class="icon-cloud-upload"></i> Drop Here</div>
            <div class="list">
                <ul>
                    <li><i class="icon-file-alt"></i>index.html <span class="cancel"><i class="icon-minus-sign"></i></span></li>
                    <li><i class="icon-file-alt"></i>style.css <span class="cancel"><i class="icon-minus-sign"></i></span></li>
                    <li><i class="icon-file-alt"></i>jquery.js <span class="cancel"><i class="icon-minus-sign"></i></span></li>
                    <li><i class="icon-file-alt"></i>logo.png <span class="cancel"><i class="icon-minus-sign"></i></span></li>
                    <li><i class="icon-file-alt"></i>logo.png <span class="cancel"><i class="icon-minus-sign"></i></span></li>
                </ul>
            </div>
            <div class="progress">
                <div class="bar"></div>
                <div class="tip">50%</div>
            </div>
        </div>
    </div>
</div>
*@


<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet" />



<input type="file" id="file" />
<button id="upload">Upload</button>
<div id="progress">
    <div id="bar"></div>
</div>
<img id="image-preview" />
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script>
    $(document).ready(function () {
        var cropper = null;

        //$('#file').on('change', function () {
        //    // Check if a file has been selected
        //    if (this.files && this.files[0]) {

        //        if (isImage(this.files[0])) {
        //            console.log("Selected file is an image.");

        //            // Load the image into the Cropper.js plugin
        //            var reader = new FileReader();
        //            reader.onload = function (e) {
        //                $('#image-preview').attr('src', e.target.result);
        //                cropper = new Cropper($('#image-preview')[0], {
        //                    aspectRatio: 1,
        //                    crop: function (event) {
        //                        console.log(event.detail.x);
        //                        console.log(event.detail.y);
        //                        console.log(event.detail.width);
        //                        console.log(event.detail.height);
        //                    }
        //                });
        //            };
        //            reader.readAsDataURL(this.files[0]);
        //        }
        //        else{
        //            console.log("Selected file is not an image!!!");
        //        }
        //    }
        //});

        $('#upload').on('click', function () {
            if (cropper) {
                
                console.log("cropped is not null.");

                // Get the cropped image data
                var canvas = cropper.getCroppedCanvas({
                    width: 200,
                    height: 200
                });
                canvas.toBlob(function (blob) {
                    // Create a FormData object and add the cropped image file to it
                    var formData = new FormData();
                    formData.append('file', blob, 'cropped.jpg');
                    uploadData(formData);
                });
            }
            else {
                console.log("cropped is null.");


                var fileInput = $('#file');
                var selectedFile = fileInput[0].files[0];

                uploadData(selectedFile);
            }
        });
    });

    // this funciton for post data to server.
    function uploadData(formData) {
        console.log('uploadData Called.', formData);
        // Create a progress bar and add it to the page
        var progressBar = $('<div class="progress-bar"></div>').appendTo($('#bar'));

        // Send the file to the server using AJAX
        $.ajax({
            url: '/api/File/Upload',
            type: 'POST',
            data: formData,
            contentType: false,
            processData: false,
            xhr: function () {
                var xhr = new window.XMLHttpRequest();
                xhr.upload.addEventListener('progress', function (evt) {
                    if (evt.lengthComputable) {
                        var percentComplete = evt.loaded / evt.total;
                        progressBar.width(percentComplete * 100 + '%');
                    }
                }, false);
                return xhr;
            },
            success: function (response) {
                alert('File uploaded successfully. URL: ' + response.url);
            },
            error: function () {
                alert('Error uploading file.');
            }
        });
    }

    function isImage(file) {
        // Check if the file type starts with "image/"
        return file.type.startsWith("image/");
    }
</script>

@*<script>
    const dropZone = document.getElementById('drop-zone');
    const progressBar = document.getElementById('progress-bar');
    const progressBarFill = progressBar.querySelector('.progress-bar-fill');
    const uploadForm = document.getElementById('upload-form');

    dropZone.addEventListener('dragover', e => {
      e.preventDefault();
      dropZone.classList.add('drag-over');
    });

    dropZone.addEventListener('dragleave', e => {
      e.preventDefault();
      dropZone.classList.remove('drag-over');
    });

    dropZone.addEventListener('drop', e => {
      e.preventDefault();
      dropZone.classList.remove('drag-over');
      const files = Array.from(e.dataTransfer.files);
      handleFiles(files);
    });

    uploadForm.addEventListener('submit', e => {
      e.preventDefault();
      const files = Array.from(uploadForm.elements.file.files);
      handleFiles(files);
    });

    function handleFiles(files) {
      if (files.length === 0) return;

      progressBar.style.display = 'block';
      progressBarFill.style.width = '0%';

      const formData = new FormData();
      files.forEach(file => {
        formData.append('file', file);
      });

      fetch('/file/upload', {
        method: 'POST',
        body: formData,
        headers: {
          'Accept': 'application/json'
        },
        onUploadProgress: progressEvent => {
          const progressPercent = (progressEvent.loaded / progressEvent.total) * 100;
          progressBarFill.style.width = `${progressPercent}%`;
        }
      })
      .then(response => response.json())
      .then(data => {
        progressBar.style.display = 'none';
        if (data.editUrl) {
          // Redirect to the image editing UI
          window.location.href = data.editUrl;
        } else {
          // Handle uploaded file
          console.log('Uploaded file:', data.filePath);
        }
      })
      .catch(error => {
        progressBar.style.display = 'none';
        console.error('Error uploading file:', error);
      });
    }
</script>*@

